// <auto-generated />
using System;
using GreatTeamApi.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreatTeamApi.Infra.Data.Migrations
{
    [DbContext(typeof(EntityContext))]
    [Migration("20240427152939_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GreatTeamApi.Domain.Entities.Confederation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("char(36)")
                        .HasColumnName("player_id");

                    b.Property<string>("Team")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("team");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("confederation", (string)null);
                });

            modelBuilder.Entity("GreatTeamApi.Domain.Entities.MedicalRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<int>("InjuryType")
                        .HasColumnType("int")
                        .HasColumnName("injury_type");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("char(36)")
                        .HasColumnName("player_id");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("medical_record", (string)null);
                });

            modelBuilder.Entity("GreatTeamApi.Domain.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<int>("ContractStatus")
                        .HasColumnType("int")
                        .HasColumnName("contract_status");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("player", (string)null);
                });

            modelBuilder.Entity("GreatTeamApi.Domain.Entities.WarningCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<int>("CardType")
                        .HasColumnType("int")
                        .HasColumnName("card_type");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("char(36)")
                        .HasColumnName("player_id");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("warning_card", (string)null);
                });

            modelBuilder.Entity("GreatTeamApi.Domain.Entities.Confederation", b =>
                {
                    b.HasOne("GreatTeamApi.Domain.Entities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("GreatTeamApi.Domain.Entities.MedicalRecord", b =>
                {
                    b.HasOne("GreatTeamApi.Domain.Entities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("GreatTeamApi.Domain.Entities.WarningCard", b =>
                {
                    b.HasOne("GreatTeamApi.Domain.Entities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });
#pragma warning restore 612, 618
        }
    }
}
